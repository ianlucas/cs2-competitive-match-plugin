name: Build and Package

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Generate build number
        id: buildnumber
        uses: onyxmueller/build-tag-number@v1
        with:
          token: ${{secrets.github_token}}     

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update module version
        if: github.ref == 'refs/heads/main'
        run: |
          sed -i 's/ModuleVersion => "1.0.0"/ModuleVersion => "1.${{ steps.buildnumber.outputs.build_number }}.0"/g' source/CompetitiveMatch/CompetitiveMatch.cs

      - name: Set up .NET 8
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build the project
        run: dotnet build

      - name: Zip release
        run: |
          (cd bin/Release && zip -r ../../CompetitiveMatch-v${{ steps.buildnumber.outputs.build_number }}.zip .)

      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          body: CompetitiveMatch v${{ steps.buildnumber.outputs.build_number }}
          tag_name: v${{ steps.buildnumber.outputs.build_number }}
          files: |
            CompetitiveMatch-v${{ steps.buildnumber.outputs.build_number }}.zip
